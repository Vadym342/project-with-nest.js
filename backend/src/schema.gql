# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Shipment {
  id: Int!
  orderId: Int!
  fullName: String!
  phone: String!
  country: String!
  city: String!
  address: String!
}

type Specification {
  id: Int!
  brand: String
  Model: String
  description: String
  feature: String
  producer: String
}

type Category {
  id: Int!
  name: String!
}

type Product {
  id: Int!
  name: String!
  price: Float!
  rating: Float!
  ratingVotes: Float
  discount: Float
  isFavorite: Boolean
  image: String!
  categoryId: Int!
  specificationId: Int
  organizationId: Int
  category: Category!
  organization: Organization!
  specification: Specification!
}

type Organization {
  id: Int!
  name: String!
}

type User {
  id: Int!
  name: String
  email: String!
  password: String!
  role: Roles!
  organizationId: Int
}

enum Roles {
  USER
  ADMIN
}

type Order {
  id: Int!
  ownerId: Int!
  shipmentId: Int!
  status: Statuses!
  archived: Boolean!
  items: [OrderItem!]!
  shipment: Shipment!
}

enum Statuses {
  PENDING
  REJECTED
  ACCEPTED
}

type OrderItem {
  id: Int!
  orderId: Int!
  productId: Int!
  orderedPrice: Float!
  quantity: Int!
}

type LoginResponse {
  accessToken: String!
  user: User!
}

type Query {
  getAllUsers: [User!]!
  getUserById(id: Int!): User!
  getUserByEmail(email: String!): User!
  getAllOrganizations: [Organization!]!
  getOrganizationById(id: Int!): Organization!
  getAllOrders: [Order!]!
  getOrderById(id: Int!): Order!
  getAllProducts: [Product!]!
  getFlashDealsProducts(page: Int!, pageSize: Int!): [Product!]!
  getProductById(id: Int!): Product!
  getAllCategories: [Category!]!
  getCategoryById(id: Int!): Category!
  getAllSpecifications: [Specification!]!
  getSpecificationById(id: Int!): Specification!
  getAllShipments: [Shipment!]!
  getShipmentByOrderId(id: Int!): [Shipment!]!
  getShipmentById(id: Int!): Shipment!
  getAllOrderItems: [OrderItem!]!
  getOrderItemsForOrderById(id: Int!): [OrderItem!]!
  getOrderItemById(id: Int!): OrderItem!
  getImage(key: String!): String!
}

type Mutation {
  login(loginUserDto: LoginUserDto!): LoginResponse!
  createUser(userDto: CreateUserDto!): User!
  updateUser(updateUserDto: UpdateUserDto!): User!
  removeUserById(id: Int!): User!
  createOrganization(organizationDto: CreateOrganizationDto!): Organization!
  updateOrganization(updateOrganizationInput: UpdateOrganizationDto!): Organization!
  removeOrganizationById(id: Int!): Organization!
  createOrder(orderDto: CreateOrderDto!): Order!
  updateOrder(updateOrderInput: UpdateOrderDto!): Order!
  removeOrderById(id: Int!): Order!
  createProduct(productDto: CreateProductDto!): Product!
  updateProduct(updateProductDto: UpdateProductDto!): Product!
  removeProductById(id: Int!): Product!
  createCategory(CategoryDto: CreateCategoryDto!): Category!
  updateCategory(updateCategoryDto: UpdateCategoryDto!): Category!
  removeCategoryById(id: Int!): Category!
  createSpecification(SpecificationDto: CreateSpecificationDto!): Specification!
  updateSpecification(updateSpecificationDto: UpdateSpecificationDto!): Specification!
  removeSpecificationById(id: Int!): Specification!
  createShipment(ShipmentDto: CreateShipmentDto!): Shipment!
  updateShipment(updateShipmentInput: UpdateShipmentDto!): Shipment!
  removeShipmentById(id: Int!): Shipment!
  createOrderItem(OrderItemDto: CreateOrderItemDto!): OrderItem!
  updateOrderItem(updateOrderItemInput: UpdateOrderItemDto!): OrderItem!
  removeOrderItemById(id: Int!): OrderItem!
  uploadFile(file: Upload!): String!
}

input LoginUserDto {
  username: String!
  password: String!
}

input CreateUserDto {
  name: String
  email: String!
  password: String!
  role: Roles = USER
  organizationId: Int
}

input UpdateUserDto {
  name: String
  email: String
  password: String
  role: Roles = USER
  organizationId: Int
  id: Int!
}

input CreateOrganizationDto {
  name: String!
}

input UpdateOrganizationDto {
  name: String
  id: Int!
}

input CreateOrderDto {
  ownerId: Int!
  status: Statuses!
  items: [CreateOrderItemDto!]!
  shipmentId: Int!
}

input CreateOrderItemDto {
  orderId: Int!
  productId: Int!
  orderedPrice: Float!
  quantity: Int!
}

input UpdateOrderDto {
  ownerId: Int
  status: Statuses
  items: [CreateOrderItemDto!]
  shipmentId: Int
  id: Int!
}

input CreateProductDto {
  name: String!
  price: Float!
  discount: Float
  image: String!
  rating: Float!
  isFavorite: Boolean
  organizationId: Int!
  categoryId: Int!
  specificationId: Int!
}

input UpdateProductDto {
  name: String
  price: Float
  discount: Float
  image: String
  rating: Float
  isFavorite: Boolean
  organizationId: Int
  categoryId: Int
  specificationId: Int
  id: Int!
}

input CreateCategoryDto {
  name: String!
}

input UpdateCategoryDto {
  name: String
  id: Int!
}

input CreateSpecificationDto {
  brand: String
  Model: String
  description: String
  feature: String
  producer: String
}

input UpdateSpecificationDto {
  brand: String
  Model: String
  description: String
  feature: String
  producer: String
  id: Int!
}

input CreateShipmentDto {
  orderId: Int!
  fullName: String!
  phone: String!
  country: String!
  city: String!
  address: String!
}

input UpdateShipmentDto {
  orderId: Int
  fullName: String
  phone: String
  country: String
  city: String
  address: String
  id: Int!
}

input UpdateOrderItemDto {
  orderId: Int
  productId: Int
  orderedPrice: Float
  quantity: Int
  id: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload